
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5DAB0917B3CDD1891EC2F41A792FB8DC'
    
_lr_action_items = {'COMMENT':([0,1,6,8,12,28,34,35,37,],[6,6,-5,-34,6,-30,-31,-32,-33,]),'PRINTKEYWORD':([0,1,6,8,12,28,34,35,37,],[7,7,-5,-34,7,-30,-31,-32,-33,]),'BASICTYPE':([0,1,6,8,12,28,34,35,37,],[16,16,-5,-34,16,-30,-31,-32,-33,]),'RPAREN':([5,9,11,13,17,19,20,25,29,31,41,46,47,48,49,50,53,54,55,],[-19,-18,-23,-24,-22,-20,-17,-21,-14,-25,-13,51,-10,-12,-16,-13,55,-11,-15,]),'NEWLINE':([0,1,4,5,6,8,9,11,12,13,14,17,18,19,20,21,23,24,25,28,29,30,31,34,35,37,43,45,49,51,55,],[8,8,28,-19,-5,-34,-18,-23,8,-24,-14,-22,34,-20,-17,35,37,-25,-21,-30,-14,-29,-25,-31,-32,-33,-26,-27,-16,-28,-15,]),'STRINGLITERAL':([0,1,6,7,8,12,28,34,35,37,38,40,41,50,52,],[20,20,-5,20,-34,20,-30,-31,-32,-33,20,20,20,20,20,]),'BOOLLITERAL':([0,1,6,7,8,12,28,34,35,37,38,40,41,50,52,],[9,9,-5,9,-34,9,-30,-31,-32,-33,9,9,9,9,9,]),'ENUMKEYWORD':([0,1,6,7,8,12,28,34,35,37,38,40,41,50,52,],[22,22,-5,22,-34,22,-30,-31,-32,-33,22,22,22,22,22,]),'EQUALS':([14,24,29,33,],[-14,38,-14,40,]),'COMMA':([5,9,11,13,17,19,20,25,29,31,47,49,55,],[-19,-18,-23,-24,-22,-20,-17,-21,-14,-25,52,-16,-15,]),'LPAREN':([29,33,44,],[-14,41,50,]),'NUMERAL':([0,1,6,7,8,12,28,34,35,37,38,40,41,50,52,],[5,5,-5,5,-34,5,-30,-31,-32,-33,5,5,5,5,5,]),'IDENTIFIER':([0,1,2,6,7,8,12,14,15,16,22,26,28,34,35,37,38,39,40,41,42,50,52,],[14,14,-6,-5,29,-34,14,-9,29,-8,29,-7,-30,-31,-32,-33,29,29,29,29,29,29,29,]),'DOT':([14,24,29,31,36,],[-14,39,-14,39,42,]),'$end':([0,1,3,6,8,10,12,27,28,32,34,35,37,],[-4,-4,-1,-5,-34,0,-4,-3,-30,-2,-31,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([0,1,12,],[1,1,1,]),'argumentList':([41,50,],[46,53,]),'basictype':([0,1,12,],[2,2,2,]),'statements':([0,1,12,],[3,27,32,]),'string':([0,1,7,12,38,40,41,50,52,],[17,17,17,17,17,17,17,17,17,]),'assignment':([0,1,12,],[18,18,18,]),'enum':([0,1,7,12,38,40,41,50,52,],[19,19,19,19,19,19,19,19,19,]),'initialisation':([0,1,12,],[4,4,4,]),'argumentListNonEmpty':([41,50,52,],[48,48,54,]),'program':([0,],[10,]),'bool':([0,1,7,12,38,40,41,50,52,],[11,11,11,11,11,11,11,11,11,]),'statement':([0,1,12,],[12,12,12,]),'expr':([0,1,7,12,38,40,41,50,52,],[21,21,30,21,43,45,47,47,47,]),'output':([0,1,12,],[23,23,23,]),'identifier':([0,1,7,12,15,22,38,39,40,41,42,50,52,],[24,24,31,24,33,36,31,44,31,31,49,31,31,]),'type':([0,1,12,],[15,15,15,]),'methodCall':([0,1,7,12,38,40,41,50,52,],[25,25,25,25,25,25,25,25,25,]),'numeral':([0,1,7,12,38,40,41,50,52,],[13,13,13,13,13,13,13,13,13,]),'objecttype':([0,1,12,],[26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parse.py',267),
  ('statements -> statement statements','statements',2,'p_statements','parse.py',272),
  ('statements -> comment statements','statements',2,'p_statements','parse.py',273),
  ('statements -> <empty>','statements',0,'p_statements','parse.py',274),
  ('comment -> COMMENT','comment',1,'p_comment','parse.py',283),
  ('type -> basictype','type',1,'p_type','parse.py',289),
  ('type -> objecttype','type',1,'p_type','parse.py',290),
  ('basictype -> BASICTYPE','basictype',1,'p_basicType','parse.py',295),
  ('objecttype -> IDENTIFIER','objecttype',1,'p_objectType','parse.py',299),
  ('argumentListNonEmpty -> expr','argumentListNonEmpty',1,'p_argumentList_nonEmpty','parse.py',304),
  ('argumentListNonEmpty -> expr COMMA argumentListNonEmpty','argumentListNonEmpty',3,'p_argumentList_nonEmpty','parse.py',305),
  ('argumentList -> argumentListNonEmpty','argumentList',1,'p_argumentList','parse.py',313),
  ('argumentList -> <empty>','argumentList',0,'p_argumentList','parse.py',314),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parse.py',323),
  ('methodCall -> identifier DOT identifier LPAREN argumentList RPAREN','methodCall',6,'p_methodCall','parse.py',327),
  ('enum -> ENUMKEYWORD identifier DOT identifier','enum',4,'p_enum','parse.py',331),
  ('string -> STRINGLITERAL','string',1,'p_string','parse.py',335),
  ('bool -> BOOLLITERAL','bool',1,'p_bool','parse.py',340),
  ('numeral -> NUMERAL','numeral',1,'p_numeral','parse.py',344),
  ('expr -> enum','expr',1,'p_expr','parse.py',349),
  ('expr -> methodCall','expr',1,'p_expr','parse.py',350),
  ('expr -> string','expr',1,'p_expr','parse.py',351),
  ('expr -> bool','expr',1,'p_expr','parse.py',352),
  ('expr -> numeral','expr',1,'p_expr','parse.py',353),
  ('expr -> identifier','expr',1,'p_expr','parse.py',354),
  ('assignment -> identifier EQUALS expr','assignment',3,'p_assignment','parse.py',359),
  ('initialisation -> type identifier EQUALS expr','initialisation',4,'p_initialisation','parse.py',364),
  ('initialisation -> type identifier LPAREN argumentList RPAREN','initialisation',5,'p_initialisation','parse.py',365),
  ('output -> PRINTKEYWORD expr','output',2,'p_output','parse.py',370),
  ('statement -> initialisation NEWLINE','statement',2,'p_statement','parse.py',375),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parse.py',376),
  ('statement -> expr NEWLINE','statement',2,'p_statement','parse.py',377),
  ('statement -> output NEWLINE','statement',2,'p_statement','parse.py',378),
  ('statement -> NEWLINE','statement',1,'p_statement','parse.py',379),
]
